version: '3.8'

services:
  # בוט התמימים הפיראטים
  pirate-bot:
    image: dov121212/bot_telegram_2:latest
    container_name: pirate-bot-main-2025
    restart: unless-stopped
    environment:
      # הגדרות בוט - עדכן את הערכים האלה!
      - BOT_TOKEN=${BOT_TOKEN}
      - MAIN_GROUP_ID=${MAIN_GROUP_ID}
      - LOG_CHANNEL_ID=${LOG_CHANNEL_ID}
      - ADMIN_IDS=${ADMIN_IDS}
      
      # הגדרות מסד נתונים
      - USE_DATABASE=true
      - DB_HOST=pirate-mysql-db
      - DB_NAME=pirate_content
      - DB_USER=pirate_user
      - DB_PASSWORD=${DB_PASSWORD}
      
      # הגדרות Redis Cache
      - CACHE_TYPE=redis
      - REDIS_HOST=pirate-redis-cache
      - REDIS_PORT=6379
      
      # הגדרות נוספות
      - DEBUG=false
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./exports:/app/exports
    depends_on:
      - pirate-mysql-db
      - pirate-redis-cache
    networks:
      - pirate-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL Database
  pirate-mysql-db:
    image: mysql:8.0
    container_name: pirate-mysql-db-2025
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=pirate_content
      - MYSQL_USER=pirate_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - pirate-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "pirate_user", "-p${DB_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  pirate-redis-cache:
    image: redis:7-alpine
    container_name: pirate-redis-cache-2025
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pirate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx Reverse Proxy (אופציונלי - לweb interface בעתיד)
  nginx:
    image: nginx:alpine
    container_name: pirate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - pirate-bot
    networks:
      - pirate-network
    profiles:
      - web  # הפעל רק עם --profile web

  # Monitoring - Prometheus (אופציונלי)
  prometheus:
    image: prom/prometheus:latest
    container_name: pirate-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - pirate-network
    profiles:
      - monitoring

  # Monitoring - Grafana (אופציונלי)
  grafana:
    image: grafana/grafana:latest
    container_name: pirate-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - pirate-network
    profiles:
      - monitoring

networks:
  pirate-network:
    driver: bridge
    name: pirate-content-network-2025

volumes:
  mysql_data:
    name: pirate-mysql-data-2025
  redis_data:
    name: pirate-redis-data-2025
  prometheus_data:
    name: pirate-prometheus-data
  grafana_data:
    name: pirate-grafana-data